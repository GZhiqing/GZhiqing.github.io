[{"content":" 写在前面 迭代收敛定理 SOR简介 SOR算法推导 SOR算法收敛性 实例分析 代码实现 参考文献与链接 迭代法收敛定理 定理1(充要条件)： 矩阵$\\mathbf{M}$的谱半径 $$ \\rho \\left( \\mathbf{M} \\right) =\\mathop {\\max} \\limits_i\\left\\{ \\lambda _i\\left| i=1,2,\\cdots n \\right. \\right\\} \u003c1\\left( \\lVert \\mathbf{M} \\rVert _2\u003c1 \\right) \\,\\, \\tag{1}$$定理2(充分条件)： 矩阵$\\mathbf{M}$的某个算子范数 $$ \\lVert \\mathbf{M} \\rVert \u003c1 \\tag{2} $$ SOR简介 SOR是Successive Over Relaxation（逐次超松弛）的缩写。该方法是求解大型稀疏矩阵方程组的有效方法之一，也可看作为Gauss-Seidel迭代法的加速，Gauss-Seidel是SOR迭代的一种特殊形式。\nSOR算法推导 将方程组$\\mathbf{AX}=b$写成 $$ a_{i 1} x_{1}+a_{i 2} x_{2}+\\cdots+a_{i, i-1} x_{i-1}+a_{i i} x_{i} \\cdots+a_{i n} x_{n}=b_{i}, \\quad(i=1,2, \\cdots, n)\\tag{2.1} $$ 则 $$ \\begin{aligned} \u0026\\Rightarrow a_{i i} x_{i}=b_{i}-\\left(a_{i 1} x_{1}+a_{i 2} x_{2}+\\cdots+a_{i, i-1} x_{i-1}\\right)-\\left(a_{i, i+1} x_{i+1}+\\cdots+a_{i n} x_{n}\\right)\\\\ \u0026\\Rightarrow a_{i i} x_{i}=a_{i i} x_{i}+\\left(b_{i}-a_{i 1} x_{1}-a_{i 2} x_{2}-\\cdots-a_{i, i-1} x_{i-1}-a_{i i} x_{i}-a_{i, i+1} x_{i+1}-\\cdots-a_{i n} x_{n}\\right)\\\\ \u0026\\Rightarrow x_{i}=x_{i}+\\frac{1}{a_{i i}}\\left(b_{i}-a_{i 1} x_{1}-a_{i 2} x_{2}-\\cdots-a_{i, i-1} x_{i-1}-a_{i t} x_{i}-a_{i, i+1} x_{i+1}-\\cdots-a_{i n} x_{n}\\right) \\end{aligned} $$ 于是Gauss-Seidel迭代法可写成（$a_{i,i}\\ne 0$） $$ \\begin{array}{c} x_{i}^{(k+1)}=x_{i}^{(k)}+\\frac{1}{a_{i i}}\\left(b_{i}-a_{i 1} x_{1}^{(k+1)}-\\cdots-a_{i, i-1} x_{i-1}^{(k+1)}-a_{i n} x_{i}^{(k)}-\\cdots-a_{i n} x_{n}^{(k)}\\right) \\\\ =x_{i}^{(k)}+\\frac{1}{a_{i i}}\\left(b_{i}-\\sum_{j=1}^{i-1} a_{i j} x_{j}^{(k+1)}-\\sum_{j=i}^{n} a_{i j} x_{j}^{(k)}\\right) \\\\ r_{i}^{(k)}=\\left(b_{i}-\\sum_{j=1}^{i-1} a_{i j} x_{j}^{(k+1)}-\\sum_{j=i}^{n} a_{i j} x_{j}^{(k)}\\right), \\quad i=1,2, \\cdots, n \\end{array}\\tag{2.2} $$ 记 $$ r_{i}^{(k)}=\\left(b_{i}-\\sum_{j=1}^{i-1} a_{i j} x_{j}^{(k+1)}-\\sum_{j=i}^{n} a_{i j} x_{j}^{(k)}\\right), \\quad i=1,2, \\cdots, n $$ 则(2.2)式可写成 $$ x_{i}^{(k+1)}=x_{i}^{(k)}+\\frac{1}{a_{i i}} r_{i}^{(k)}\\tag{2.3} $$ 由(2.3)式可看出，Gauss-Seidel迭代法的第$k+1$步的基础上每个分量上加上$\\frac{1}{a_{i i}} r_{i}^{(k)}$。为了获得更快的收敛效果，在修正项的前面乘以一个参数$\\omega$，于是得到逐次超松弛算法 $$ x_{i}^{(k+1)}=x_{i}^{(k)}+\\frac{\\omega}{a_{i i}} r_{i}^{(k)}, \\quad i=1,2, \\cdots, n\\tag{2.4} $$ 即 $$ x_{i}^{(k+1)}=(1-\\omega) x_{i}^{(k)}+\\frac{\\omega}{a_{i i}}\\left(b_{i}-\\sum_{j=1}^{i-1} a_{i j} x_{j}^{(k+1)}-\\sum_{j=i+1}^{n} a_{i j} x_{j}^{(k)}\\right), \\quad i=1,2, \\cdots, n\\tag{2.5} $$ 其矩阵形式为 $$ \\mathbf{X}^{(k+1)}=(1-\\omega) \\mathbf{X}^{(k)}+\\omega \\mathbf{D}^{-1}\\left(b+\\mathbf{L} \\mathbf{X}^{(k)}+\\mathbf{U} \\mathbf{X}^{(k)}\\right)\\tag{2.6} $$ 其中，$\\mathbf{A=D-L-U}$ $$ \\mathbf{D}=\\left( \\begin{matrix} a_{11}\u0026\t\u0026\t\u0026\t\\\\ \u0026\ta_{22}\u0026\t\u0026\t\\\\ \u0026\t\u0026\t\\ddots\u0026\t\\\\ \u0026\t\u0026\t\u0026\ta_{nn}\\\\ \\end{matrix} \\right), \\mathbf{L}=\\left( \\begin{matrix} 0\u0026\t\u0026\t\u0026\t\\\\ a_{21}\u0026\t0\u0026\t\u0026\t\\\\ \\vdots\u0026\t\\ddots\u0026\t\\ddots\u0026\t\\\\ a_{n1}\u0026\ta_{n2}\u0026\t\\cdots\u0026\t0\\\\ \\end{matrix} \\right) , \\mathbf{U}=\\left( \\begin{matrix} 0\u0026\ta_{12}\u0026\t\\cdots\u0026\ta_{1n}\\\\ \u0026\t0\u0026\t\\ddots\u0026\ta_{2n}\\\\ \u0026\t\u0026\t\\ddots\u0026\t\\vdots\\\\ \u0026\t\u0026\t\u0026\t0\\\\ \\end{matrix} \\right)$$ SOR算法收敛性 由(2.6)式有 $$ \\mathbf{DX}^{\\left( k+1 \\right)}=\\left( 1-\\omega \\right) \\mathbf{DX}^{\\left( k \\right)}+\\omega \\left( b+\\mathbf{LX}^{\\left( k+1 \\right)}+\\mathbf{UX}^{\\left( k \\right)} \\right) $$ 即 $$ \\mathbf{D} \\mathbf{X}^{(k+1)}-\\omega \\mathbf{L} \\mathbf{X}^{(k+1)}=(1-\\omega) \\mathbf{D} \\mathbf{X}^{(k)}+\\omega \\mathbf{U} \\mathbf{X}^{(k)}+\\omega b $$ 于是有 $$ \\begin{array}{l} (\\mathbf{D}-\\omega \\mathbf{L}) \\mathbf{X}^{(k+1)}=[(1-\\omega) \\mathbf{D}+\\omega \\mathbf{U}] \\mathbf{X}^{(k)}+\\omega b \\\\ \\Rightarrow \\mathbf{X}^{(k+1)}=(\\mathbf{D}-\\omega \\mathbf{L})^{-1}[(1-\\omega) \\mathbf{D}+\\omega \\mathbf{U}] \\mathbf{X}^{(k)}+\\omega(\\mathbf{D}-\\omega \\mathbf{L})^{-1} b \\end{array} $$ 记 $$ \\left\\{\\begin{array}{c} \\mathbf{B}_{\\omega}=(\\mathbf{D}-\\omega \\mathbf{L})^{-1}[(1-\\omega) \\mathbf{D}+\\omega \\mathbf{U}] \\\\ \\mathbf{F}_{\\omega}=\\omega(\\mathbf{D}-\\omega \\mathbf{L})^{-1} b \\end{array}\\right. \\tag{3.1} $$ 则有 $$ \\mathbf{X}^{(k+1)}=\\mathbf{B_{\\omega}} \\mathbf(X)^{(k)}+\\mathbf{F_{\\omega}} \\tag{3.2} $$ 其中，$\\mathbf{B_{ \\omega}}$为SOR迭代矩阵。 由收敛定理的定理1和定理2可知，SOR收敛的充要条件是$ \\rho{(\\mathbf{B_{\\omega}})}\u003c1 $或$ \\lVert{(\\mathbf{B_{\\omega}}\\rVert_2)}\u003c1 $，可以看出SOR迭代法收敛与否或收敛的快慢都与松弛因子$\\omega$有关，因此SOR迭代算法存在如下定理.\n定理3: SOR迭代法收敛的充要条件是松弛因子$0\u003c\\omega\u003c2$ . 证：由于SOR收敛，则$\\rho{(\\mathbf{B_{\\omega}})}\u003c1$。记$\\mathbf{B_{\\omega}}$的特征值为$\\lambda _1,\\lambda _2,\\cdots ,\\lambda _n$,而$n$阶矩阵的$n$个特征值之积等于其行列式之值，即 $$ \\left|\\operatorname{det} \\mathbf{B}_{\\omega}\\right|=\\left|\\lambda_{1} \\lambda_{2} \\cdots \\lambda_{n}\\right| $$ 而 $$ \\left|\\lambda_{i}\\right| \\leq\\left|\\rho\\left(\\mathbf{B}_{\\omega}\\right)\\right| $$ 故 $$ \\left|\\operatorname{det} \\mathbf{B}_{\\omega}\\right|=\\left|\\lambda_{1} \\lambda_{2} \\cdots \\lambda_{n}\\right| \\leq\\left[\\rho\\left(\\mathbf{B}_{\\omega}\\right)\\right]^{n}\u003c1 $$ 另一方面，由 $$ \\mathbf{B}_{\\omega}=(\\mathbf{D}-\\omega \\mathbf{L})^{-1}[(1-\\omega) \\mathbf{D}+\\omega \\mathbf{U}] $$ 有 $$ \\left|\\operatorname{det} \\mathbf{B}_{\\omega}\\right|=\\left|\\operatorname{det}(\\mathbf{D}-\\omega \\mathbf{L})^{-1}\\right| \\cdot | \\operatorname{det}[(1-\\omega) \\mathbf{D}+\\omega \\mathbf{U}] $$ 即 $$ \\left|\\operatorname{det} \\mathbf{B}_{\\omega}\\right|=\\frac{|\\operatorname{det}[(1-\\omega) \\mathbf{D}+\\omega \\mathbf{U}]|}{|\\operatorname{det}(\\mathbf{D}-\\omega \\mathbf{L})|}=|1-\\omega|^{n} $$ 因此有$|1-\\omega|^{n}\u003c1$或者$|1-\\omega|\u003c1$,也即$0\u003c\\omega\u003c2$.　$\\square$\n定理4：如果矩阵$\\mathbf{A}$是对称正定的，则SOR法对于$0\u003c\\omega\u003c2$是收敛的。\n实例分析 用逐次超松弛（SOR）迭代法求解方程组$\\mathbf{AX}=b$，其中矩阵$\\mathbf{A}$为 $$ \\mathbf{A}=\\left[\\begin{array}{ccccccc} 12 \u0026 -2 \u0026 1 \u0026 \u0026 \u0026 \u0026 \\\\ -2 \u0026 12 \u0026 -2 \u0026 1 \u0026 \u0026 \u0026 \\\\ 1 \u0026 -2 \u0026 12 \u0026 -2 \u0026 1 \u0026 \u0026 \\\\ \u0026 \\ddots \u0026 \\ddots \u0026 \\ddots \u0026 \\ddots \u0026 \\ddots \u0026 \\\\ \u0026 \u0026 1 \u0026 -2 \u0026 12 \u0026 -2 \u0026 1 \\\\ \u0026 \u0026 \u0026 1 \u0026 -2 \u0026 12 \u0026 -2 \\\\ \u0026 \u0026 \u0026 \u0026 1 \u0026 -2 \u0026 12 \\end{array}\\right]\\left[\\begin{array}{c} x_{1} \\\\ x_{2} \\\\ x_{3} \\\\ \\vdots \\\\ x_{18} \\\\ x_{19} \\\\ x_{20} \\end{array}\\right]=\\left[\\begin{array}{c} 5 \\\\ 5 \\\\ 5 \\\\ \\vdots \\\\ 5 \\\\ 5 \\\\ 5 \\end{array}\\right]\\tag{4.1} $$ 利用Matlab2016a软件求解(4.1)式（具体程序见第五节），讨论不同的松弛因子$\\omega$对迭代速度的影响。其中参数设置为：最大迭代值为500。\n由于(4.1)式是一个对称正定阵，且本文规定松弛因子$0\u003c\\omega\u003c2$，因此由定理4可知，式(4.1)一定收敛，也即有解。求解的结果如下表。 表1　不同$\\omega$值对方程收敛速度的影响\n$\\mathbf{\\omega}$ 迭代次数 0.3 120 0.6 50 0.9 25 1.2 30 1.5 50 1.8 150 由表1或图1可知，\n（1）当SOR迭代法松弛因子$\\omega\u003e1$时，$\\omega$值越大，迭代的次数就越多，收敛速度就越慢，$\\omega$越接近1时，迭代的次数越少，收敛速度越快；\n（2）当SOR迭代法松弛因子$\\omega\u003c1$时，$\\omega$越小，迭代的次数就越多，收敛速度就越慢，$\\omega$越接近1时，迭代的次数越少，收敛速度越快；\n（3)SOR迭代法松弛因子不在范围内时，系数矩阵的谱半径大于1，不收敛。 图1 不同$\\omega$值时的SOR迭代曲线值 小结 在SOR迭代算法中，松弛因子$\\omega$越接近1时，迭代的次数越小，收敛速度越快，故$\\omega$最优值应选择$\\omega=1$。 在SOR迭代算法中，松弛因子$\\omega$距离1越远时，迭代次数越多，收敛速度越慢。 在SOR迭代算法中，松弛因子应选择$0\u003c\\omega\u003c2$，当$\\omega$超过这个范围时，不满足收敛定理，即谱半径不小于1，此时方程无解。 代码实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 close all;clear;clc;%清空环境变量 load(\u0026#39;A.mat\u0026#39;);%导入矩阵A b=5*ones(20,1);%导入矩阵b D=diag(diag(A));%求解对角阵 LA=tril(A);%抽取下三角矩阵 U=LA-A;%得到去除对角线元素的上三角阵 L=D-LA;%得到去除对角线元素的下三角阵 XXX=[];%存储不同松弛因子的迭代值 I=[];%记录迭代终止次数 for w=0.3:0.3:2;%设置松弛因子大小0\u0026lt;w\u0026lt;2 XX=[]; %% SOR迭代公式 M=(D-w*L)\\((1-w)*D+w*U); f=w*((D-w*L)\\b); MaxEigM = max(abs(eig(M)));%求谱半径 x=[]; x(:,1)=5.*randn(size(b));%给出任意的迭代初始值 N=500;%最大迭代次数 %% 如果谱半径小于1则说明收敛，否则不收敛 if MaxEigM\u0026lt;1 i=1; while i\u0026lt;N if norm(A*x(:,i)-b)\u0026gt;=1e-10; x(:,i+1)=M*x(:,i)+f; z=x(:,i+1); i=i+1; else n=i; z=x(:,i); i=N; end end XX=[XX,x]; I=[I length(XX)]; XXX=[XXX XX]; e=norm(A*z-b); else out=\u0026#39;谱半径大于等于1，该方程不能用SOR方法求解\u0026#39; end end %% 绘图 subplot(2,3,1) plot(1:I(1,1),XXX(:,1:I(1,1)),\u0026#39;linewidth\u0026#39;,1.5) grid on title(\u0026#39;\\omega = 0.3\u0026#39;) subplot(2,3,2) plot(1:I(1,2),XXX(:,1:I(1,2)),\u0026#39;linewidth\u0026#39;,1.5) grid on title(\u0026#39;\\omega = 0.6\u0026#39;) subplot(2,3,3) plot(1:I(1,3),XXX(:,1:I(1,3)),\u0026#39;linewidth\u0026#39;,1.5) grid on title(\u0026#39;\\omega = 0.9\u0026#39;) subplot(2,3,4) plot(1:I(1,4),XXX(:,1:I(1,4)),\u0026#39;linewidth\u0026#39;,1.5) grid on title(\u0026#39;\\omega = 1.2\u0026#39;) subplot(2,3,5) plot(1:I(1,5),XXX(:,1:I(1,5)),\u0026#39;linewidth\u0026#39;,1.5) grid on title(\u0026#39;\\omega = 1.5\u0026#39;) subplot(2,3,6) plot(1:I(1,6),XXX(:,1:I(1,6)),\u0026#39;linewidth\u0026#39;,1.5) grid on title(\u0026#39;\\omega = 1.8\u0026#39;) suptitle(\u0026#39;不同\\omega值对SOR迭代法的影响\u0026#39;) 数据下载地址 可关注微信公众号用数学看世界回复“SOR密码”获取数据下载地址及密码\n参考文献与链接 [1]\t数值分析 曾繁慧\n[2]\t科学计算与应用软件讲义_迭代思想 胡行华\n[3]\thttps://mdnice.com/\n[4] Markdown Nice插件下载\n[5] Markdown三线表制作方法\n更多内容请关注公众号获取 ","date":"2024-10-01T11:05:58+08:00","image":"https://GZhiqing.github.io/p/%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E7%9A%84SOR%E8%BF%AD%E4%BB%A3%E6%B3%95_hu15117267622182420785.jpeg","permalink":"https://GZhiqing.github.io/p/%E6%95%B0%E5%AD%A6/","title":"线性方程组的SOR迭代法"},{"content":"正文测试 这是我的第一个博客 这是一个测试 ","date":"2024-09-29T11:05:58+08:00","image":"https://GZhiqing.github.io/p/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/My-blog_hu1991641401927331910.jpg","permalink":"https://GZhiqing.github.io/p/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/","title":"我的第一个博客"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀 让我停不了飞不远在过往游荡 不告而别的你 就算为了我着想 这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://GZhiqing.github.io/p/test-chinese/hutomo-abrianto-l2jk-uxb1BY-unsplash_hu13714511474273067689.jpg","permalink":"https://GZhiqing.github.io/p/test-chinese/","title":"中文测试"}]